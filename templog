#!/bin/sh
# templog logs temperature to /var/log/temp.log 
VERSION=0.1.1

# log file location 
LOG_DIR="/var/log"
LOG_FILE="$LOG_DIR/temp.log"

print_error_msg () {
	echo "templog $VERSION"
	echo ""
	printf "\tlog\t\tWrite temperature to log file %s\n" $LOG_FILE
	printf "\tprint\t\tPrint log entries\n" 
	printf "\tplot [hours]\tPlot temperatures in the last 24 h\n" 
}

create_log_file () {
	if ! [ -e $LOG_FILE ]; then
	echo "Asking for root permission to create log file $LOG_FILE"
		sudo touch $LOG_FILE && sudo chmod 777 $LOG_FILE || exit 2 
		echo "Created log file at $LOG_FILE"
	fi
}

check_sensor () {
	# check if temperature file exists, otherwise use lm_sensors
	if [ -e "$SYS_TEMP_FILE" ]; then
		TEMP=$(head -n 1 "$SYS_TEMP_FILE" | xargs -I{} awk "BEGIN {printf \"%.2f\n\", {}/1000}")
	else
		if [ -e "$HOME"/.templogrc ]; then
			SENSOR=$(cat "$HOME"/.templogrc)	
			TEMP=$(sensors -u "${SENSOR}" | grep temp1_input | awk '{printf "%.1f", $2}')
		else
			echo "Could not find $SYS_TEMP_FILE nor $HOME/.templogrc."
			echo ""
			echo "Create a file $HOME/.templogrc containing the name of the sensor you want to measure. To get the name of the sensor type the command 'sensors' (dep: lm_sensors)."
			echo ""
			echo "For example, insert the desired <sensor> in the following command:"
			echo ""
			echo "echo <sensor> >> ${HOME}/.templogrc"
			exit 2
		fi
	fi
}

log_temp () {
	# location of system file with the temperature
	SYS_TEMP_FILE='/sys/class/thermal/thermal_zone0/temp' 
	
	check_sensor

	TIME=$(date +%s)
	LOG_STRING="$TIME $TEMP"
	echo "$LOG_STRING" >> $LOG_FILE 
}

print_log () {
	head -n 1 "$LOG_FILE"
	tail -n +2 "$LOG_FILE"
}

plot_log () {
	# plot temperatures with gnuplot
	NOW=$(date +"%s")
	HOURS="${1}"
	DELTA_T=$(( 60 * 60 * HOURS ))
	T=$(( NOW - DELTA_T ))
	DATA=$(awk -v t="${T}" '{if ($1>t) print $1,$2}' $LOG_FILE)
	PLOT_FILE='/tmp/plot_data'
	echo "$DATA" > $PLOT_FILE

	# calculate average
	N=$(wc -l $PLOT_FILE | cut -d ' ' -f 1)
	SUM=$(awk '{sum+=$2} END {print sum}' $PLOT_FILE)
	AVG=$(echo "$SUM" / "$N" | bc -l)
	AVG=$(printf '%.1f' "$AVG")

	# plot
	gnuplot -d -e "set terminal dumb; set xdata time; set timefmt '%s'; \
		set title 'Temperature last ${1} h (avg: ${AVG})'; \
		set format x '%H'; \
		set tics scale 0; plot '${PLOT_FILE}' using 1:2 notitle pt '*'" \
		2> /dev/null

	# remove temporary file
	rm -f $PLOT_FILE 
}

case "$1" in
	"log")
		create_log_file
		log_temp
		exit 0;;
	"print")
		print_log
		exit 0;;
	"plot")
		if [ -z "$2" ]; then
			plot_log 24
		else
			plot_log "$2"
		fi
		exit 0;;
	*)
		print_error_msg	
		exit 1;;
esac

